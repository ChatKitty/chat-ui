var y=class{listeners;port;constructor(i){this.listeners=new Map;let e=i.port1;e.onmessage=s=>{let{type:r,payload:a}=s.data;if(!this.listeners.has(r))return;this.listeners.get(r).forEach(d=>{d(a)})},this.port=e}subscribe(i,e){this.listeners.has(i)||this.listeners.set(i,[]),this.listeners.get(i).push(e)}unsubscribe(i,e){if(!this.listeners.has(i))return;let s=this.listeners.get(i),r=s.indexOf(e);r>-1&&s.splice(r,1)}dispatch(i){this.port.postMessage(i)}};function n(t,i){if(!i.length)return t;if(!t)return;let[e,...s]=i;if(typeof e=="number"&&b(t))return n(t[e],s);if((typeof e=="number"||typeof e=="string")&&v(t))return n(t[e],s)}function b(t){return Array.isArray(t)}function v(t){return typeof t=="object"&&t!==null}var m="https://ui.chatkitty.com",x=t=>{let i=n(t,["container","id"])||"chat-ui",e=document.getElementById(i);if(!e)throw new Error(`Chat UI container not found. Please define a div with id "${i}" in your HTML page.`);if(e.hasChildNodes())throw new Error(`Chat UI container must be empty. Please remove all child elements from the div with id "${i}".`);e.style.display="relative",e.style.height=n(t,["container","height"])||"100vh",e.style.width=n(t,["container","width"])||"100%";let s=document.createElement("iframe");s.title="Chat UI",s.src=`${m}/chat?widget_id=${t.widgetId}${t.locale?`&locale=${t.locale}`:""}`,s.style.height="100%",s.style.width="100%",s.style.border="none";let r=new MessageChannel,a=new y(r);a.subscribe("live-chat:initialized",()=>{let o=[],d=n(t,["username"]);d&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"username",value:d}}),o.push("username"));let h=n(t,["environment"]);h&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"environment",value:h}}),o.push("environment"));let p=n(t,["theme"]);p&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"theme",value:p}}),o.push("theme"));let l=n(t,["authStrategy"]);l&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"authStrategy",value:l}}),o.push("authStrategy"));let u=n(t,["profile"]);u&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"profile",value:u}}),o.push("profile"));let f=n(t,["route"]);f&&(a.dispatch({type:"chat:assign-configuration-option",payload:{name:"route",value:f}}),o.push("route"));let c=n(t,["onNotificationReceived"]);c&&a.subscribe("chat:notification-received",g=>{c(g)}),a.dispatch({type:"chat:initialize",payload:{options:o}})}),a.subscribe("chat:mounted",o=>{let d=n(t,["chatComponent"]);if(!d)return;let h=d({...o,dispatch:c=>{a.dispatch({type:"client:dispatch",payload:{message:c}})}}),p=n(h,["menuActions"]);p&&a.dispatch({type:"chat:menu-actions-set",payload:{actions:p}});let l=n(h,["onMounted"]);l&&l();let u=n(h,["channelDetailsHandler"]);u&&a.subscribe("chat:channel-details-selected",c=>{u(c)});let f=n(h,["menuActionHandler"]);f&&a.subscribe("chat:menu-action-selected",c=>{f(c)})}),window.addEventListener("message",o=>{o.origin===m&&o.data==="chatkitty:live-chat-mounted"&&s.contentWindow?.postMessage("initialize",m,[r.port2])}),e.appendChild(s)};export{x as loadChatUi};
